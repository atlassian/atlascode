{
    "request": {
        "method": "GET",
        "urlPathPattern": "/rest/api/1.0/projects/mocked-project/repos/dc-mocked-repo/settings/pull-requests"
    },
    "response": {
        "status": 200,
        "jsonBody": {
            "mergeConfig": {
                "commitSummaries": 20,
                "defaultStrategy": {
                    "description": "Always create a new merge commit and update the target branch to it, even if the source branch is already up to date with the target branch.",
                    "enabled": true,
                    "flag": "--no-ff",
                    "id": "no-ff",
                    "name": "Merge commit"
                },
                "strategies": [{
                    "description": "Always create a new merge commit and update the target branch to it, even if the source branch is already up to date with the target branch.",
                    "enabled": true,
                    "flag": "--no-ff",
                    "id": "no-ff",
                    "name": "Merge commit"
                }, {
                    "description": "If the source branch is out of date with the target branch, create a merge commit. Otherwise, update the target branch to the latest commit on the source branch.",
                    "enabled": false,
                    "flag": "--ff",
                    "id": "ff",
                    "name": "Fast-forward"
                }, {
                    "description": "If the source branch is out of date with the target branch, reject the merge request. Otherwise, update the target branch to the latest commit on the source branch.",
                    "enabled": false,
                    "flag": "--ff-only",
                    "id": "ff-only",
                    "name": "Fast-forward only"
                }, {
                    "description": "Rebase commits from the source branch onto the target branch, creating a new non-merge commit for each incoming commit, and create a merge commit to update the target branch.",
                    "enabled": false,
                    "flag": "rebase + merge --no-ff",
                    "id": "rebase-no-ff",
                    "name": "Rebase and merge"
                }, {
                    "description": "Rebase commits from the source branch onto the target branch, creating a new non-merge commit for each incoming commit, and fast-forward the target branch with the resulting commits.",
                    "enabled": false,
                    "flag": "rebase + merge --ff-only",
                    "id": "rebase-ff-only",
                    "name": "Rebase and fast-forward"
                }, {
                    "description": "Combine all commits into one new non-merge commit on the target branch.",
                    "enabled": false,
                    "flag": "--squash",
                    "id": "squash",
                    "name": "Squash"
                }, {
                    "description": "If the source branch is out of date with the target branch, reject the merge request. Otherwise, combine all commits into one new non-merge commit on the target branch.",
                    "enabled": false,
                    "flag": "--squash --ff-only",
                    "id": "squash-ff-only",
                    "name": "Squash, fast-forward only"
                }],
                "type": "DEFAULT"
            },
            "com.atlassian.bitbucket.server.bitbucket-bundled-hooks:requiredApprovers": {
                "enable": false,
                "count": 0
            },
            "requiredAllApprovers": false,
            "needsWork": false,
            "requiredApprovers": 0,
            "requiredAllTasksComplete": false,
            "com.atlassian.bitbucket.server.bitbucket-build:requiredBuilds": {
                "enable": false,
                "count": 0
            },
            "requiredSuccessfulBuilds": 0
        },
        "headers": {
            "Content-Type": "application/json"
        }
    }
}