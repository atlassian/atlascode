name: Build
permissions:
  contents: read
  packages: read

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Yarn dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Run vulnerability audit
        run: yarn npm audit --recursive --no-deprecations

      - name: Run linter
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Yarn dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Build and package the extension
        run: yarn extension:package

      - name: Upload extension package
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: atlascode-*.vsix
          retention-days: 1

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Yarn dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Run unit tests
        run: yarn test

  test-e2e:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target:
          - jira-cloud
          - jira-dc
          - bitbucket-cloud
          - bitbucket-dc

    env:
      ATLASCODE_FX3_API_KEY: ${{ secrets.ATLASCODE_FX3_API_KEY }}
      ATLASCODE_FX3_ENVIRONMENT: ${{ vars.ATLASCODE_FX3_ENVIRONMENT }}
      ATLASCODE_FX3_TARGET_APP: ${{ vars.ATLASCODE_FX3_TARGET_APP }}
      ATLASCODE_FX3_TIMEOUT: ${{ vars.ATLASCODE_FX3_TIMEOUT }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Yarn dependencies
        uses: ./.github/actions/setup-dependencies

      - name: Download extension package
        uses: actions/download-artifact@v4
        with:
          name: extension-package

      - name: Generate SSL certs for E2E test
        run: yarn test:e2e:sslcerts

      - name: Fetch E2E image
        run: |
          docker pull ghcr.io/atlassian/atlascode-e2e:latest
          docker tag ghcr.io/atlassian/atlascode-e2e:latest atlascode-e2e

      - name: Run E2E (${{ matrix.target }})
        run: yarn test:e2e:docker
        env:
          TARGET: ${{ matrix.target }}

      - name: Upload E2E artifacts (${{ matrix.target }})
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.target }}
          path: ./test-results
          retention-days: 1
          if-no-files-found: ignore

  finalize:
    needs: [lint, test-unit, test-e2e]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "Lint job failed"
            exit 1
          fi
          if [[ "${{ needs.test-unit.result }}" != "success" ]]; then
            echo "Unit test job failed"
            exit 1
          fi
          if [[ "${{ needs.test-e2e.result }}" != "success" ]]; then
            echo "E2E test jobs failed"
            exit 1
          fi
          echo "All steps completed successfully"
