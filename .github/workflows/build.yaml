name: Build
permissions:
  contents: read
  packages: read

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --no-audit

      - name: Run vulnerability audit
        # "There is no Vulnerability in Media Viewer after 48.5.4. since it was fixed by patching, but npm audit still reports it.",
        # So that switched to audit-ci with allowlist
        run: npx audit-ci --config=".audit-ci.json"

      - name: Run linter
        run: npm run lint

  ci-matrix:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - kind: unit
          - kind: e2e
            target: jira-cloud
          - kind: e2e
            target: jira-dc
          - kind: e2e
            target: bitbucket-cloud
          - kind: e2e
            target: bitbucket-dc

    env:
      ATLASCODE_FX3_API_KEY: ${{ secrets.ATLASCODE_FX3_API_KEY }}
      ATLASCODE_FX3_ENVIRONMENT: ${{ vars.ATLASCODE_FX3_ENVIRONMENT }}
      ATLASCODE_FX3_TARGET_APP: ${{ vars.ATLASCODE_FX3_TARGET_APP }}
      ATLASCODE_FX3_TIMEOUT: ${{ vars.ATLASCODE_FX3_TIMEOUT }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Run unit tests
        if: matrix.kind == 'unit'
        run: npm run test

      - name: Build and package the extension
        if: matrix.kind == 'e2e'
        run: npm run extension:package

      - name: Generate SSL certs for E2E test
        if: matrix.kind == 'e2e'
        run: npm run test:e2e:sslcerts

      - name: Fetch E2E image
        if: matrix.kind == 'e2e'
        run: |
          docker pull ghcr.io/atlassian/atlascode-e2e:latest
          docker tag ghcr.io/atlassian/atlascode-e2e:latest atlascode-e2e

      - name: Run E2E (${{ matrix.target }})
        if: matrix.kind == 'e2e'
        run: npm run test:e2e:docker
        env:
          TARGET: ${{ matrix.target }}

      - name: Upload E2E artifacts (${{ matrix.target }})
        if: matrix.kind == 'e2e' && failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.target }}
          path: ./test-results
          retention-days: 1
          if-no-files-found: ignore

  finalize:
    needs: [ci-matrix]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [[ "${{ needs.ci-matrix.result }}" != "success" ]]; then
            echo "One of the ci-matrix jobs failed"
            exit 1
          fi
          echo "All steps completed successfully"
